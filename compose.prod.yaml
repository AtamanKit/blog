services:
  api:
    build: 
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: api-ps
    command: uv run gunicorn project.wsgi:application --bind 0.0.0.0:8000 --access-logfile - --error-logfile --worker-class gevent
    env_file:
      - ./backend/.env.prod
    ports:
      - 8000:8000
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - db

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: web-ps
    ports:
      - 3000:3000
    depends_on:
      - api

  db:
    image: postgres:17-alpine
    container_name: db-ps
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./backend/.env.prod
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.27-alpine
    container_name: nginx-ps
    depends_on:
      - api
      - web
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/static
      - media_volume:/media

volumes:
  postgres_data:
  static_volume:
  media_volume:
